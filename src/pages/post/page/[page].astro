---
import Page from '../../../layouts/page.astro'
import PostPreview from '../../../components/PostPreview.astro'
import Container from '../../../components/Container.astro'

type Post = Record<string, any>

export async function getStaticPaths({ paginate }) {
  const pages: Post[] = (await Astro.glob('./../../post/*.{md,mdx}'))
    .filter((post) => !post.frontmatter.draft)
    .sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf())
  return paginate(pages, { pageSize: 10 })
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props
---

<Page>
  <Container>
    <h1
      class="text-3xl font-extrabold leading-9 tracking-tight text-base-content sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
    >
      Tutti gli articoli
    </h1>
    <input
      type="text"
      placeholder="Cerca tra gli articoli"
      class="input input-bordered w-full md:max-w-xl my-10"
    />
    <ul class="my-8 divide-y divide-primary-content">
      {page.data.map((post: Post) => <PostPreview post={post} />)}
    </ul>
    <div class="pt-6 pb-8 space-y-2 md:space-y-5">
      <nav class="flex justify-between">
        {
          page.url.prev ? (
            <a class="text-primary hover:text-primary-focus" href={page.url.prev}>
              <button>&larr; Precedente</button>
            </a>
          ) : (
            <button disabled class="text-neutral opacity-40">
              &larr; Precedente
            </button>
          )
        }
        <span>Pagina {page.currentPage} di {page.lastPage}</span>
        {
          page.url.next ? (
            <a class="text-primary hover:text-primary-focus" href={page.url.next}>
              <button>Successivo &rarr;</button>
            </a>
          ) : (
            <button disabled class="text-neutral opacity-40">
              Successivo &rarr;
            </button>
          )
        }
      </nav>
    </div>
  </Container>
</Page>
