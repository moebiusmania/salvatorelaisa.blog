---
import Page from '../layouts/page.astro'
import Container from '../components/Container.vue'

const pages = (await Astro.glob('./post/*.{md,mdx}'))
  .filter((post) => !post.frontmatter.draft)

const allTags = pages.map((page) => page.frontmatter.tags).reduce((prev, curr) => prev.concat(curr))

const tags = [...new Set(allTags)]
  .map((tag) => ({
    label: tag,
    items: pages.filter((page) => page.frontmatter.tags.includes(tag)).length || 0
  }))
---

<Page>
  <Container client:load>
    <div
      class="flex flex-col items-start justify-start divide-y divide-gray-200 dark:divide-gray-700 md:justify-center md:items-center md:divide-y-0 md:flex-row md:space-x-6 md:mt-24"
    >
      <div class="pt-6 pb-8 space-x-2 md:space-y-5">
        <h1
          class="text-3xl font-extrabold leading-9 tracking-tight text-base-content sm:text-4xl sm:leading-10 md:text-6xl md:leading-14 capitalize"
        >
          Tags
        </h1>
      </div><div class="flex flex-wrap max-w-lg">
        { tags.sort((a, b) => b.items - a.items).map((tag) => <div class="mt-2 mb-2 mr-5">
          <a
            class="mr-3 text-sm font-medium text-primary uppercase hover:primary-focus"
            href={`/tags/${tag.label}`}>{tag.label}</a><a
            class="-ml-2 text-sm font-semibold text-gray-600 uppercase dark:text-gray-300"
            href={`/tags/${tag.label}`}
          >({tag.items})</a>
        </div> ) }
        
      </div>
    </div>
  </Container>
</Page>
